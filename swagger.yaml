---
swagger: '2.0'
info:
  version: 0.1.0
  title: Talent IQ Candidate API
  contact:
    name: TalentIQ Support
    email: support@talentiq.co
  description: |
    # Introduction
    Welcome to TalentIQâ€™s API! You can use the API to programmatically interact with the TalentIQ data set for the purpose of data enrichment, updates,
    lead gen, form-fill, or anything else you can think of. The API is organized around REST . All requests return JSON, and HTTP are used to indicate errors.
    All requests should be made over SSL. All request and response bodies, including errors, are encoded in JSON.

    The endpoint of the API is:
    [https://api.talentiq.co/v2/person](https://api.talentiq.co/v2/person)

    If you or anyone on your team has any questions, feature requests, or suggestions, please feel free to reach out to us anytime at [support@talentiq.co](support@talentiq.co).

host: https://api.talentiq.co/v2/person

schemes:
- https
consumes:
- application/json
produces:
- application/json
definitions:
  response:
    type: objects
    required:
    - error
    - message
    - likelihood
    - status
    - requestId
    - person
    properties:
      error:
        type: string
        message: string
      likelihood:
        type: integer
        format: int
      status:
        type: integer
        format: int
      requestId:
        type: string
      person:
        $ref: '#/definitions/person_object'
responses:
  NotFound:
    description: Entity Not Found.
    schema:
      $ref: '#/definitions/response'
  200:
    description: Successful response, Candidate Found
    schema:
      $ref: '#/definitions/response'
    headers:
      X-Rate-Limit-Limit:
        description: The number of allowed requests in the current period
        type: integer
      X-Rate-Limit-Remaining:
        description: The number of remaining requests in the current period
        type: integer
      X-Rate-Limit-Reset:
        description: The number of seconds left in the current period
        type: integer
  202:
    description: Successful response, Candidate Found
    schema:
      $ref: '#/definitions/response'
    headers:
      X-Rate-Limit-Limit:
        description: The number of allowed requests in the current period
        type: integer
      X-Rate-Limit-Remaining:
        description: The number of remaining requests in the current period
        type: integer
      X-Rate-Limit-Reset:
        description: The number of seconds left in the current period
        type: integer
  206:
    description: Successful response
    schema:
      $ref: '#/definitions/response'
    headers:
      X-Rate-Limit-Limit:
        description: The number of allowed requests in the current period
        type: integer
      X-Rate-Limit-Remaining:
        description: The number of remaining requests in the current period
        type: integer
      X-Rate-Limit-Reset:
        description: The number of seconds left in the current period
        type: integer
  401:
    description: Unauthorized or Invalid Key.
    schema:
      $ref: '#/definitions/response'
  403:
    description: Successful response
    schema:
      $ref: '#/definitions/response'
    headers:
      X-Rate-Limit-Limit:
        description: The number of allowed requests in the current period
        type: integer
      X-Rate-Limit-Remaining:
        description: The number of remaining requests in the current period
        type: integer
      X-Rate-Limit-Reset:
        description: The number of seconds left in the current period
        type: integer
  404:
    description: Not Found
    schema:
      $ref: '#/definitions/response'
  405:
    description: Method Not Allowed
    schema:
      $ref: '#/definitions/response'
  422:
    description: Successful response
    schema:
      $ref: '#/definitions/response'
  429:
    description: Successful response
    schema:
      $ref: '#/definitions/response'
    headers:
      X-Rate-Limit-Limit:
        description: The number of allowed requests in the current period
        type: integer
      X-Rate-Limit-Remaining:
        description: The number of remaining requests in the current period
        type: integer
      X-Rate-Limit-Reset:
        description: The number of seconds left in the current period
        type: integer
  500:
    description: Successful response
    schema:
      $ref: '#/definitions/response'
  503:
    description: Service Unreachable
    schema:
      $ref: '#/definitions/response'
securityDefinitions:
  api_key:
    type: apiKey
    name: x-api-key
    in: header
tags:
  - name: Person Lookup
    description: |
      Gets `Person` objects.  Optional query param of **size** determines size of returned arrayhost: [https://api.talentiq.co](api.talentiq.co)
  - name: Response Fields
    description: |
        Each query will return a single person. If more than one person is found, the most relevant match is returned first. The user can request more matches from the query
        by incrementing the `from` parameter in their POST data. The total number of persons matching the query is listed in the response as `total` .

        SUCCESSFUL RESPONSE FIELDS
        Response Field | Description
        -------------  | -------------
        likelihood `integer` | The calculated likelihood score
        status | Response Code
        total `total`| The total number of results found.
        requestId `string` | Request Identification
        person | person response object

        The person object, containing all details about the requested person.
  - name: Optimizing Match Rates
    description: |
      ***FINDING EXACT MATCHES***
      * * *
      When attempting to find exact matches for a person, we recommend only updating the person with the response data when the likelihood field in the response is 10.
      Match rates and data quality will always be positively correlated with the quantity of data provided in the request.

      ***SEARCH***
      * * *
      When using the API for search purposes (e.g., lead gen, candidate search), you will likely have to perform some analysis on your end to determine whether the
      resulting persons match what you are looking for. It's difficult for us at this time to determine that a person who works at "TalentIQ Inc." also works at
      "TalentIQ Technologies", so if you're not getting a response for a search containing specific skills, education, experience, or location data, it is likely that we
      have a different name in our dataset than the one you're providing in the request. If this is causing problems on your end, our engineering team would be happy to
      help you implement a custom solution that optimizes your use case.

      ***FORMS***
      * * *
      The best solution for using the API to auto-populate forms and applications on behalf of your users, where the objective is to cut down on the amount of information
      they have to manually enter, we recommend a progressive profiling approach, where as a user is filling out your form, you repeatedly hit our api with information they
      have submitted until a 200 HTTP code with a likelihood value of 10 is returned.

      The most optimal way to achieve this is to:

        1. Have the user enter their email AND/OR linkedin URL. Request our API with this data to find a match.
        2. If no person with a likelihood score of 10 is returned, have the user continue through the form/application until at least 3 of the following attributes have been added:
            * Name   -  `name`
            * Company  -  `company`
            * Location -   `locality` ,   `country-name` ,   `region`
            * School   -   `school`
            * Major  -   `major`
            * Degree  -   `degree`
            * Skills  -   `skills`
            * Non identity-driven social networks (twitter, github)   -   `profiles`
            * Websites (personal, company, blog, resume url)   -   `websites`
        3. Once at least 3 of these fields been added, and for every one added after that, hit our API with a new request containing all of this information.
        Do this through the rest of the form/application flow until a match is found.
host: api.talentiq.co
basePath: "/v2"
paths:
  "/worker":
    post:
      description: |
        takes a previous search and posts to worker.
      consumes:
      - application/json
      produces:
      - application/json
      operationId: personWorker
      parameters:
      - in: body
        name: body
        required: true
        schema:
          "$ref": "#/definitions/person"
      responses:
        '200':
          description: Successful response, Candidate found and post made.
          schema:
            "$ref": "#/definitions/response"
  "/person":
    post:
      description: |
        Gets `Person` objects.
        Optional query param of **size** determines
        size of returned array
      consumes:
      - application/json
      produces:
      - application/json
      operationId: personHandle
      parameters:
      - in: body
        name: body
        required: true
        schema:
          "$ref": "#/definitions/person"
      responses:
        '200':
          headers:
            X-RateLimit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            X-RateLimit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            X-RateLimit-Reset:
              description: The number of seconds left in the current period
              type: integer
            Content-Type:
              description: content type of the data returned, generally in the same
                format you requested
              type: string
          description: Successful response, Candidate Found.
          schema:
            "$ref": "#/definitions/response"
        '202':
          headers:
            X-Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            X-Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            X-Rate-Limit-Reset:
              description: The number of seconds left in the current period
              type: integer
          description: Successful response, Candidate found.
          schema:
            "$ref": "#/definitions/response"
        '206':
          headers:
            X-Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            X-Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            X-Rate-Limit-Reset:
              description: The number of seconds left in the current period
              type: integer
          description: Successful response
          schema:
            "$ref": "#/definitions/response"
        '400':
          description: Bad Request
          schema:
            "$ref": "#/definitions/response"
        '401':
          description: Unauthorized or Invalid Key.
          schema:
            "$ref": "#/definitions/response"
        '403':
          headers:
            X-Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            X-Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            X-Rate-Limit-Reset:
              description: The number of seconds left in the current period
              type: integer
          description: Successful response
          schema:
            "$ref": "#/definitions/response"
        '404':
          description: Not Found
          schema:
            "$ref": "#/definitions/response"
        '405':
          description: Method Not Allowed
          schema:
            "$ref": "#/definitions/response"
        '422':
          description: Successful response
          schema:
            "$ref": "#/definitions/response"
        '429':
          headers:
            X-Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            X-Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            X-Rate-Limit-Reset:
              description: The number of seconds left in the current period
              type: integer
          description: Successful response
          schema:
            "$ref": "#/definitions/response"
        '500':
          description: Successful response
          schema:
            "$ref": "#/definitions/response"
        '503':
          description: Service Unreachable
          schema:
            "$ref": "#/definitions/response"
security:
- type:
  - apiKey
  name:
  - x-api-key
  in:
  - header
definitions:
  response:
    type: object
    properties:
      error:
        type: string
      message:
        type: string
      likelihood:
        type: integer
        format: int
      status:
        type: integer
        format: int
      requestId:
        type: string
      person:
        "$ref": "#/definitions/person_object"
  person_object:
    type: object
    properties:
      awards:
        type: array
        description: Specify any awards they have received throughout their professional
          career
        uniqueItems: true
        items:
          type: object
          additionalProperties: true
          properties:
            title:
              type: string
              description: e.g. One of the 100 greatest minds of the century
            date:
              type: string
              description: e.g. 1989-06-12
              format: date
            awarder:
              type: string
              description: e.g. Time Magazine
            summary:
              type: string
              description: e.g. Received for my work with Quantum Physics
      basics:
        type: object
        additionalProperties: true
        properties:
          additionalInfo:
            type: object
            description: Requesting this information in a VC might be illegal in various
              regions
            properties:
              location:
                "$ref": "#/definitions/location"
              citizenship:
                type: array
                uniqueItems: true
                items:
                  type: string
                  description: Information about your nationality, e.g. Canadian
              maritalStatus:
                type: string
                description: Information about your civil status, e.g. married, single,
                  divorced or widowed
              birth:
                type: object
                description: Information about the date and place of your birth
                properties:
                  date:
                    type: string
                    description: Date (as per ISO 8601) e.g. 2014-06-29
                    format: date
                  location:
                    type: string
                    description: Place of birth e.g. New York
              children:
                type: string
                description: Provide information about your children, e.g. number
                  of children and their age
              gender:
                type: string
                description: Provide information about your gender, e.g. male, female,
                  other, $custom
              veteran:
                type: boolean
                description: Veteran status.
              salary:
                type: string
                description: The expected salary.
              age:
                type: string
                description: Estimated age.
              ageRange:
                type: string
                description: Estimated age range.
              homeOwnerStatus:
                type: string
                description: Do they own their home?
              householdIncome:
                type: string
                description: Do they own their home?
          aliases:
            type: array
            description: Other names the user goes by.
            uniqueItems: true
            items:
              type: string
              description: A name.
          email:
            type: string
            description: e.g. thomas@gmail.com
            format: email
          emails:
            type: array
            description: Email addresses associated with the user.
            uniqueItems: true
            items:
              type: object
              additionalProperties: true
              properties:
                email:
                  type: string
                  description: e.g. thomas@gmail.com
                  format: email
                isVerified:
                  type: boolean
                  description: Whether we have verified the email or not.
                  default: false
          industry:
            type: string
            description: e.g. Software
          location:
            "$ref": "#/definitions/location"
          locations:
            type: array
            uniqueItems: true
            items:
              "$ref": "#/definitions/location"
          name:
            type: string
            description: The person's name, e.g., Daniel Amaya
          phone:
            type: string
            description: Phone numbers are stored as strings so use any format you
              like, e.g. 712-117-2923
          phoneNumbers:
            type: array
            description: Phone numbers associated with the user.
            uniqueItems: true
            items:
              type: string
              description: Phone numbers are stored as strings so use any format you
                like, e.g. 712-117-2923
          photos:
            type: array
            description: Specify any number of social networks that you participate
              in
            uniqueItems: true
            items:
              type: object
              additionalProperties: true
              properties:
                network:
                  type: string
                  description: e.g. Facebook or Twitter
                url:
                  type: string
                  description: e.g. http://twitter.com/neutralthoughts
          picture:
            type: string
            description: URL (as per RFC 3986) to a picture in JPEG or PNG format
          profiles:
            type: array
            description: Specify any number of social networks that you participate
              in
            uniqueItems: true
            items:
              type: object
              additionalProperties: true
              properties:
                network:
                  type: string
                  description: e.g. Facebook or Twitter
                username:
                  type: string
                  description: e.g. neutralthoughts
                url:
                  type: string
                  description: e.g. http://twitter.com/neutralthoughts
          summary:
            type: string
            description: The person's summary of themselves. E.g., Objective
          tagline:
            type: string
            description: e.g. The Best Developer, Ever.
          title:
            type: string
            description: e.g. Web Developer
          url:
            type: string
            description: URL (as per RFC 3986) to your website, e.g. personal homepage
          websites:
            type: array
            description: Websites associated with user.
            uniqueItems: true
            items:
              type: string
              description: URL (as per RFC 3986) to your website, e.g. personal homepage
      certification:
        type: array
        uniqueItems: true
        items:
          type: object
          additionalProperties: true
          properties:
            authority:
              type: string
              description: e.g. Oracle Inc., Institute of Mechanical Engineering,
                CIPD, United-States Immigration
            url:
              type: string
              description: e.g. http://example-authority.com/
            summary:
              type: string
              description: Short summary who this authority is
            certificates:
              type: object
              additionalProperties: true
              properties:
                name:
                  type: string
                  description: e.g. Oracle Database 12c Administrator Certified Associate,
                    H1B
                summary:
                  type: string
                  description: Thanks to $authorization/$certificate I am allowed
                    to work/work as $profession/am qualified
                verification:
                  type: string
                  description: e.g. http://example-authority.com/verify
                regions:
                  type: array
                  description: List of regions for authorization
                  uniqueItems: true
                  items:
                    type: string
                    description: e.g. United-States, New-York
                startDate:
                  type: string
                  description: Date (as per ISO 8601) e.g. 2014-06-29
                  format: date
                expirationDate:
                  type: string
                  description: Date (as per ISO 8601) e.g. 2014-06-29
                  format: date
                permanent:
                  type: boolean
                  description: Specify permanency, e.g. false, true
      education:
        type: array
        uniqueItems: true
        items:
          type: object
          additionalProperties: true
          properties:
            courses:
              type: array
              description: List notable courses/subjects
              uniqueItems: true
              items:
                type: object
                additionalProperties: false
                properties:
                  description:
                    type: string
                    description: e.g. H1302 - Introduction to American history
                  url:
                    type: string
                    description: e.g. http://example-university.com/course/example42
                  score:
                    type: string
                    description: score point average, e.g. 1.5
                  score_best:
                    type: string
                    description: best possible score on the scale, e.g. 1.0
                  score_worst:
                    type: string
                    description: worst possible score on the scale, e.g. 5.0
            degree:
              type: string
              description: e.g. Bachelor
            endDate:
              type: string
              description: e.g. 2012-06-29
              format: date
            exams:
              type: array
              description: List notable exams
              uniqueItems: true
              items:
                type: object
                additionalProperties: false
                properties:
                  description:
                    type: string
                    description: e.g. year-end exam 2015
                  url:
                    type: string
                    description: e.g. http://example-university.com/exams/2015/year-end-exam
                  score:
                    type: string
                    description: score point average, e.g. 1.5
                  score_best:
                    type: string
                    description: best possible score on the scale, e.g. 1.0
                  score_worst:
                    type: string
                    description: worst possible score on the scale, e.g. 5.0
            gpa:
              type: string
              description: grade point average, e.g. 3.67/4.0
            highlights:
              type: array
              description: Specify multiple accomplishments
              uniqueItems: true
              items:
                type: string
                description: e.g. Increased profits by 20% from 2011-2012 through
                  viral advertising
            institution:
              type: string
              description: e.g. Massachusetts Institute of Technology
            location:
              "$ref": "#/definitions/location"
            major:
              type: string
              description: e.g. Arts
            startDate:
              type: string
              description: e.g. 2014-06-29
              format: date
            url:
              type: string
              description: e.g. http://facebook.com
      events:
        type: array
        description: List notable events attended or where they have been a speaker
        uniqueItems: true
        items:
          type: object
          properties:
            name:
              type: string
              description: e.g. World Economic Forum
            summary:
              type: string
              description: Forum about world economics
            url:
              type: string
              description: e.g. http://world-economic-forum.example.com/
            location:
              "$ref": "#/definitions/location"
            startDate:
              type: string
              description: Date (as per ISO 8601) e.g. 2014-06-29
              format: date
            endDate:
              type: string
              description: Date (as per ISO 8601) e.g. 2014-06-29
              format: date
            roles:
              type: string
              description: e.g. attendee, visitor, coordinator, speaker, unconference_everything
            talks:
              type: array
              description: List of attended or given talks/presentations
              uniqueItems: true
              items:
                type: object
                additionalProperties: false
                properties:
                  title:
                    type: string
                    description: e.g. A state of the world
                  summary:
                    type: string
                    description: Awesome presentation about the state of the world
                  url:
                    type: string
                    description: Product showcase related to talk e.g. http://example.com/fancy_world_product
                  date:
                    type: string
                    description: Date (as per ISO 8601) e.g. 2014-06-29
                    format: date
                  slides:
                    type: string
                    description: e.g. http://slideshare.com/a-presentation
                    format: uri
                  recording:
                    type: string
                    description: e.g. http://google.com/84s7f8d
                    format: uri
      experience:
        type: array
        uniqueItems: true
        items:
          type: object
          properties:
            company:
              type: string
              description: e.g. Facebook
            location:
              "$ref": "#/definitions/location"
            title:
              type: string
              description: e.g. Software Engineer
            url:
              type: string
              description: e.g. http://facebook.com
            startDate:
              type: string
              description: resume.json uses the ISO 8601 date standard e.g. 2014-06-29
            endDate:
              type: string
              description: e.g. 2012-06-29
            summary:
              type: string
              description: Give an overview of your responsibilities at the company
            salary:
              type: string
              description: The estimated salary for the position at the company.
            highlights:
              type: array
              description: Specify multiple accomplishments
              uniqueItems: true
              items:
                type: string
                description: e.g. Increased profits by 20% from 2011-2012 through
                  viral advertising
            skills:
              type: array
              description: Skills utilized in the job.
              uniqueItems: true
              items:
                type: string
                description: e.g. Microsoft Office
      interests:
        type: array
        uniqueItems: true
        items:
          type: object
          additionalProperties: true
          properties:
            name:
              type: string
              description: e.g. Philosophy
            keywords:
              type: array
              items:
                type: string
                description: e.g. Friedrich Nietzsche
      languages:
        type: array
        description: Languages the person speaks
        uniqueItems: true
        items:
          type: object
          additionalProperties: true
          properties:
            name:
              type: string
              description: e.g. English, Spanish
            level:
              type: string
              description: e.g. Fluent, Beginner
      organizations:
        type: array
        description: Organizations the person has been involved with.
        uniqueItems: true
        items:
          type: object
          additionalProperties: true
          properties:
            name:
              type: string
              description: e.g. Timothy Cook
            title:
              type: string
              description: e.g., web developer
            startDate:
              type: string
              description: e.g. 2014-06-29
              format: date
            endDate:
              type: string
              description: e.g. 2012-06-29
              format: date
            url:
              type: string
              description: e.g., http://github.com/repo
            summary:
              type: string
              description: Give an overview of your responsibilities at the company
      patents:
        type: array
        description: Specify any certificates they have been awarded
        uniqueItems: true
        items:
          type: object
          additionalProperties: false
          properties:
            name:
              type: string
              description: 'e.g. M101P: MongoDB for Developers'
            institution:
              type: string
              description: e.g. MongoDB University
            dateIssued:
              type: string
              description: e.g. 2014-03-25
              format: date
            patentNumber:
              type: string
              description: The patent number
            description:
              type: string
              description: A description of the patent
            website:
              type: string
              description: e.g. https://s3.amazonaws.com/edu-cert.10gen.com/downloads/b5f42dc3aa1d4add9f1dc6ed290f1c81/Certificate.pdf
      projects:
        type: array
        uniqueItems: true
        items:
          type: object
          additionalProperties: true
          properties:
            entity:
              type: string
              description: e.g. greenpeace
            role:
              type: string
              description: e.g. sponsorship officer, contributor
            url:
              type: string
              description: e.g. http://facebook.com
            startDate:
              type: string
              description: Date (as per ISO 8601) e.g. 2014-06-29
              format: date
            endDate:
              type: string
              description: Date (as per ISO 8601) e.g. 2014-06-29
              format: date
            summary:
              type: string
              description: Give an overview of your non work projects such as volunteering,
                open-source or so
            non-profit:
              type: boolean
              description: Specify if the project was a pure volunteer, non-profit
                activity
            activities:
              type: array
              description: Specify your different projects/events for this experience
              uniqueItems: true
              items:
                type: object
                additionalProperties: true
                properties:
                  name:
                    type: string
                    description: e.g. Sponsor Acquisition
                  summary:
                    type: string
                    description: Acquiring sponsors and maintaining the sponsorship
                      relations
                  role:
                    type: string
                    description: e.g. sponsoring officer, volunteer, contributor
                  url:
                    type: string
                    description: Showcase your project/activity e.g. http://greenpeace.com/run-for-nature-2015
                  startDate:
                    type: string
                    description: Date (as per ISO 8601) e.g. 2014-06-29
                    format: date
                  endDate:
                    type: string
                    description: Date (as per ISO 8601) e.g. 2014-06-29
                    format: date
                  skills:
                    type: array
                    description: Skills utilized in the job.
                    uniqueItems: true
                    items:
                      type: string
                      description: e.g. Microsoft Office
      publications:
        type: array
        description: Specify your publications through your career
        uniqueItems: true
        items:
          type: object
          additionalProperties: true
          properties:
            title:
              type: string
              description: e.g. The World Wide Web
            summary:
              type: string
              description: Short summary of publication. e.g. Discussion of the World
                Wide Web, HTTP, HTML.
            role:
              type: string
              description: e.g. author, co-author, editor, producer
            releaseDate:
              type: string
              description: Date (as per ISO 8601) e.g. 2014-06-29
              format: date
            url:
              type: string
              description: e.g. http://www.computer.org/csdl/mags/co/1996/10/rx069-abs.html
            publisher:
              type: string
              description: e.g. IEEE, Computer Magazine
            identifiers:
              type: array
              additionalProperties: true
              items:
                type: object
                properties:
                  DOI:
                    type: string
                    description: e.g. 10.1000/182
                  ISBN:
                    type: string
                    description: e.g. 978-3-16-148410-0
                  ISSN:
                    type: string
                    description: e.g. 0000-0000
                  ISTC:
                    type: string
                    description: e.g. A02-2009-000004BE-A
                  ISRN:
                    type: string
                    description: e.g. UIUCLIS--2001/9+EARCH
                  GTIN:
                    type: string
                    description: e.g. 403456789012 1
                  EAN:
                    type: string
                    description: e.g. 4 003994 155486
      references:
        type: array
        description: List references/testimonials they have received
        uniqueItems: true
        items:
          type: object
          additionalProperties: false
          properties:
            name:
              type: string
              description: e.g. Timothy Cook
            relationship:
              type: string
              description: e.g. My Mentor
            testimonial:
              type: string
              description: e.g. Joe blogs was a great employee, who turned up to work
                at least once a week. He exceeded my expectations when it came to
                doing nothing.
            date:
              type: string
              description: Date (as per ISO 8601) e.g. 2014-06-29
              format: date
            contactInfo:
              type: object
              additionalProperties: true
              properties:
                phone:
                  type: string
                  description: 0404 444 444
                employer:
                  type: string
                  description: e.g. Piedpiper Inc
                position:
                  type: string
                  description: e.g. Master of Desaster
      skills:
        type: array
        description: professional skill-set
        uniqueItems: true
        items:
          type: object
          additionalProperties: true
          properties:
            name:
              type: string
              description: e.g. Web Development
            level:
              type: string
              description: e.g. Master
            years:
              type: string
              description: Years experience with the skill
      volunteer:
        type: array
        uniqueItems: true
        items:
          type: object
          additionalProperties: true
          properties:
            organization:
              type: string
              description: e.g. Facebook
            location:
              "$ref": "#/definitions/location"
            position:
              type: string
              description: e.g. Software Engineer
            url:
              type: string
              description: e.g. http://facebook.com
            startDate:
              type: string
              description: resume.json uses the ISO 8601 date standard e.g. 2014-06-29
              format: date
            endDate:
              type: string
              description: e.g. 2012-06-29
              format: date
            summary:
              type: string
              description: Give an overview of your responsibilities at the company
            highlights:
              type: array
              description: Specify multiple accomplishments
              uniqueItems: true
              items:
                type: string
                description: e.g. Increased profits by 20% from 2011-2012 through
                  viral advertising
            skills:
              type: array
              description: Skills utilized in the job.
              uniqueItems: true
              items:
                type: string
                description: e.g. Microsoft Office
  person:
    type: object
    properties:
      name:
        type: string
        minLength: 2
      firstName:
        type: string
        minLength: 2
      lastName:
        type: string
        minLength: 2
      webhookUrl:
        type: string
        description: Specified url we will return response to
        format: url
      aliases:
        type: array
        description: Other names the person goes by.
        uniqueItems: true
        maxItems: 5
        minItems: 1
        items:
          type: string
          minLength: 2
          description: Other names the person may go by.
      websites:
        type: array
        description: Personal websites associated with the person.
        uniqueItems: true
        maxItems: 5
        minItems: 1
        items:
          type: string
          format: url
          description: URL (as per RFC 3986) to your website, e.g. personal homepage
      emails:
        type: array
        description: Array containing all emails associated with the person.
        uniqueItems: true
        minItems: 1
        maxItems: 5
        items:
          type: string
          description: Email addresses associated with the person.
          format: email
      locations:
        type: array
        uniqueItems: true
        minItems: 1
        maxItems: 5
        items:
          "$ref": "#/definitions/location"
      profiles:
        type: array
        description: Social network profiles associated with the person.
        uniqueItems: true
        maxItems: 10
        minItems: 1
        items:
          type: string
          description: The URL to the person's social profile.
          format: url
      experience:
        type: array
        uniqueItems: true
        maxItems: 10
        minItems: 1
        items:
          type: object
          additionalProperties: true
          properties:
            company:
              type: string
              minLength: 1
              description: e.g. Facebook
            title:
              type: string
              minLength: 1
              description: e.g. Software Engineer
      skills:
        type: array
        description: Skills utilized in the job.
        uniqueItems: true
        maxItems: 10
        minItems: 1
        items:
          type: string
          minLength: 1
          description: e.g. Microsoft Office
      education:
        type: array
        uniqueItems: true
        maxItems: 5
        minItems: 1
        items:
          type: object
          properties:
            institution:
              type: string
              minLength: 1
              description: e.g. Massachusetts Institute of Technology
            major:
              type: string
              minLength: 1
              description: e.g. Arts
            degree:
              type: string
              minLength: 1
              description: e.g. Bachelor
  worker:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
  location:
    type: object
    properties:
      post-office-box:
        type: string
        minLength: 1
      extended-address:
        type: string
        minLength: 1
      street-address:
        type: string
        minLength: 1
      locality:
        type: string
        minLength: 1
      region:
        type: string
        minLength: 1
      postal-code:
        type: string
        minLength: 1
      country-name:
        type: string
        minLength: 1
    required:
    - region
    - country-name
    - locality
